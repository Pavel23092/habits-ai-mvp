function renderProgress() {
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏ —Å–µ—Ä–∏–π
    document.querySelector('.streaks-container .streak-item:nth-child(1) h3').textContent = `${db.streaks.current} üî•`;
    document.querySelector('.streaks-container .streak-item:nth-child(2) h3').textContent = `${db.streaks.best} üèÜ`;

    // --- –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê: –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è ---
    const calendarContainer = document.querySelector('.calendar-container');
    calendarContainer.innerHTML = ''; // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å

    const monthNames = ["–Ø–Ω–≤–∞—Ä—å", "–§–µ–≤—Ä–∞–ª—å", "–ú–∞—Ä—Ç", "–ê–ø—Ä–µ–ª—å", "–ú–∞–π", "–ò—é–Ω—å", "–ò—é–ª—å", "–ê–≤–≥—É—Å—Ç", "–°–µ–Ω—Ç—è–±—Ä—å", "–û–∫—Ç—è–±—Ä—å", "–ù–æ—è–±—Ä—å", "–î–µ–∫–∞–±—Ä—å"];
    const today = new Date();
    const month = today.getMonth();
    const year = today.getFullYear();

    const header = document.createElement('h3');
    header.textContent = `${monthNames[month]} ${year}`;
    calendarContainer.appendChild(header);

    const daysGrid = document.createElement('div');
    daysGrid.className = 'days-grid';
    
    // –î–æ–±–∞–≤–ª—è–µ–º –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏
    const weekdays = ['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–í—Å'];
    weekdays.forEach(day => {
        const dayEl = document.createElement('div');
        dayEl.className = 'day-name';
        dayEl.textContent = day;
        daysGrid.appendChild(dayEl);
    });
    
    const firstDayOfMonth = new Date(year, month, 1).getDay();
    const emptyDays = (firstDayOfMonth === 0) ? 6 : firstDayOfMonth - 1; // –ö–æ—Ä—Ä–µ–∫—Ü–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ —Å –ü–Ω

    // –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Å—Ç—ã–µ —è—á–µ–π–∫–∏ –¥–ª—è –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è
    for (let i = 0; i < emptyDays; i++) {
        daysGrid.appendChild(document.createElement('div'));
    }

    const daysInMonth = new Date(year, month + 1, 0).getDate();
    for (let i = 1; i <= daysInMonth; i++) {
        const dayEl = document.createElement('div');
        dayEl.className = 'day-cell';
        dayEl.textContent = i;
        
        const dateStr = `${year}-${String(month + 1).padStart(2, '0')}-${String(i).padStart(2, '0')}`;
        if (db.progress[dateStr]) {
            dayEl.classList.add('done'); // –î–µ–Ω—å –≤—ã–ø–æ–ª–Ω–µ–Ω
        }
        if (i === today.getDate()) {
            dayEl.classList.add('today'); // –°–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å
        }
        daysGrid.appendChild(dayEl);
    }
    
    calendarContainer.appendChild(daysGrid);
}
/* –°—Ç–∏–ª–∏ –¥–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è */
.calendar-container h3 {
    font-size: 20px;
    margin-bottom: 20px;
}
.days-grid {
    display: grid;
    grid-template-columns: repeat(7, 1fr);
    gap: 10px;
}
.day-name {
    font-weight: bold;
    color: #888;
    font-size: 14px;
}
.day-cell {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 36px;
    border-radius: 50%; /* –î–µ–ª–∞–µ–º –¥–Ω–∏ –∫—Ä—É–≥–ª—ã–º–∏ */
}
.day-cell.done {
    background-color: #4CD964; /* –ó–µ–ª–µ–Ω—ã–π —Ü–≤–µ—Ç —É—Å–ø–µ—Ö–∞ */
    color: white;
}
.day-cell.today {
    border: 2px solid #50A8EB; /* –°–∏–Ω—è—è –æ–±–≤–æ–¥–∫–∞ –¥–ª—è —Å–µ–≥–æ–¥–Ω—è */
}
