document.addEventListener('DOMContentLoaded', async () => {
    // --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Firebase ---
    const firebaseConfig = {
        apiKey: "AIzaSyBpaUjpnrH2QfLlK1QSr_KGeCJEt_U0OBU",
        authDomain: "habits-ai-mvp.firebaseapp.com",
        projectId: "habits-ai-mvp",
    };

    // --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤ ---
    firebase.initializeApp(firebaseConfig);
    const auth = firebase.auth();
    const firestore = firebase.firestore();
    const tg = window.Telegram.WebApp;
    tg.expand();
    
    // --- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ ---
    let userId = null;
    // –ù–∞—à–∞ –Ω–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    let dbData = {
        habits: [
            { id: 'h1', icon: 'üíß', text: '–í—ã–ø–∏—Ç—å —Å—Ç–∞–∫–∞–Ω –≤–æ–¥—ã –ø–æ—Å–ª–µ –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏—è' },
            { id: 'h2', icon: '‚úçÔ∏è', text: '–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≥–ª–∞–≤–Ω—É—é –∑–∞–¥–∞—á—É –¥–Ω—è' },
            { id: 'h3', icon: 'üìñ', text: '–ß–∏—Ç–∞—Ç—å 1 —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–µ—Ä–µ–¥ —Å–Ω–æ–º' }
        ],
        progress: {}, // –ü—Ä–∏–º–µ—Ä: { '2024-07-06': ['h1', 'h3'] }
    };
    
    const habitListEl = document.getElementById('habit-list');
    const progressBarEl = document.getElementById('progress-bar');
    const progressLabelEl = document.getElementById('progress-label');

    // --- –§—É–Ω–∫—Ü–∏—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞ ---
    function renderMainScreen() {
        habitListEl.innerHTML = ''; // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫
        const todayStr = new Date().toISOString().split('T')[0];
        const todayProgress = dbData.progress[todayStr] || [];

        dbData.habits.forEach(habit => {
            const isDone = todayProgress.includes(habit.id);
            const li = document.createElement('li');
            li.className = `habit-item ${isDone ? 'done' : ''}`;
            li.dataset.id = habit.id;
            li.innerHTML = `
                <div class="icon">${habit.icon}</div>
                <div class="text">${habit.text}</div>
                <div class="checkbox"></div>
            `;
            habitListEl.appendChild(li);
        });
        updateProgressBar();
    }
    
    // --- –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞ ---
    function updateProgressBar() {
        const todayStr = new Date().toISOString().split('T')[0];
        const todayProgress = dbData.progress[todayStr] || [];
        const totalHabits = dbData.habits.length;
        const doneHabits = todayProgress.length;
        
        const percentage = totalHabits > 0 ? (doneHabits / totalHabits) * 100 : 0;
        progressBarEl.style.width = `${percentage}%`;
        progressLabelEl.textContent = `–í—ã–ø–æ–ª–Ω–µ–Ω–æ ${doneHabits} –∏–∑ ${totalHabits}`;
    }

    // --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–æ–≤ –ø–æ —Å–ø–∏—Å–∫—É –ø—Ä–∏–≤—ã—á–µ–∫ ---
    habitListEl.addEventListener('click', async (event) => {
        const habitItem = event.target.closest('.habit-item');
        if (habitItem && !habitItem.classList.contains('done')) {
            const habitId = habitItem.dataset.id;
            const todayStr = new Date().toISOString().split('T')[0];

            // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            if (!dbData.progress[todayStr]) {
                dbData.progress[todayStr] = [];
            }
            dbData.progress[todayStr].push(habitId);
            
            // –í–∏–∑—É–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
            habitItem.classList.add('done');
            updateProgressBar();
            tg.HapticFeedback.notificationOccurred('success');
            await firestore.collection('users').doc(userId).update({
                [`progress.${todayStr}`]: dbData.progress[todayStr]
            });
        }
    });

    // --- –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ UI ---
    function initUI() {
        document.getElementById('loader').style.display = 'none';
        showFlow('main-app');
        renderMainScreen();
    }

    // --- –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏ –∑–∞–ø—É—Å–∫ ---
    auth.onAuthStateChanged(async (user) => {
        if (user) {
            userId = user.uid;
            const docRef = firestore.collection('users').doc(userId);
            const docSnap = await docRef.get();
            if (docSnap.exists) {
                // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
                const userData = docSnap.data();
                // –û–±—ä–µ–¥–∏–Ω—è–µ–º, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏, –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏—Ö –Ω–µ—Ç
                dbData = { ...dbData, ...userData };
            } else {
                // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                await docRef.set(dbData);
            }
            initUI();
        } else {
            await auth.signInAnonymously();
        }
    });
});
